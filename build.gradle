plugins {
    id 'org.springframework.boot' version '2.6.7'
    id 'io.spring.dependency-management' version '1.0.11.RELEASE'
    id 'java'
}

repositories {
    mavenCentral()
}

group = 'org.urumov'
version = '0.0.1'
sourceCompatibility = JavaVersion.VERSION_11
targetCompatibility = JavaVersion.VERSION_11

ext {
    javaxValidVersion = "2.0.1.Final"
    javaxPersistenceVersion = "2.2"
    gsonVersion = "2.9.0"
    locationTechVersion = "1.18.2"
    lombokMapstructBindingVersion = "0.2.0";
    mapstructVersion = "1.5.0.RC1"
    lombokVersion = "1.18.24"
    hibernateVersion = "5.5.5.Final"
    hibernateTypesVersion = "2.4.3"
    openApiVersion = "1.6.8"
    jsonwebtokenVersion = "0.9.1"
    jacksonDatatypeJtsVersion = "1.2.10"
    googleMapsServicesVersion = "2.0.0"
    testcontainersVersion = "1.17.1"
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-actuator'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-data-rest'
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation('org.springframework.boot:spring-boot-starter-web') {
        exclude group: 'org.springframework.boot', module: 'spring-boot-starter-logging'
    }

    implementation "io.jsonwebtoken:jjwt:$jsonwebtokenVersion"
    implementation "org.springdoc:springdoc-openapi-webmvc-core:$openApiVersion"
    implementation "org.springdoc:springdoc-openapi-ui:$openApiVersion"
    implementation "org.springdoc:springdoc-openapi-data-rest:$openApiVersion"

    implementation "org.mapstruct:mapstruct:$mapstructVersion",
            "org.projectlombok:lombok:$lombokVersion",
            "org.projectlombok:lombok-mapstruct-binding:$lombokMapstructBindingVersion"

    implementation "org.n52.jackson:jackson-datatype-jts:$jacksonDatatypeJtsVersion"

    implementation("com.google.maps:google-maps-services:$googleMapsServicesVersion") {
        exclude group: 'org.slf4j', module: 'slf4j-api'
        exclude group: 'com.squareup.okhttp3', module: 'okhttp'
        exclude group: 'io.opencensus', module: 'opencensus-api'
    }


    implementation "org.hibernate:hibernate-core:$hibernateVersion"
    implementation "org.hibernate:hibernate-spatial:$hibernateVersion"

    implementation "com.vladmihalcea:hibernate-types-52:$hibernateTypesVersion"
    implementation "org.locationtech.jts:jts-core:$locationTechVersion"

    runtimeOnly 'org.postgresql:postgresql'

    annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'
    annotationProcessor "org.mapstruct:mapstruct-processor:${mapstructVersion}",
            "org.projectlombok:lombok:$lombokVersion",
            "org.projectlombok:lombok-mapstruct-binding:${lombokMapstructBindingVersion}"

    testImplementation 'org.awaitility:awaitility'
    testImplementation 'org.testcontainers:junit-jupiter'
    testImplementation 'org.testcontainers:postgresql'

    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.springframework.security:spring-security-test'
}

dependencyManagement {
    imports {
        mavenBom "org.testcontainers:testcontainers-bom:${testcontainersVersion}"
    }
}

configurations.all {
    exclude module: 'slf4j-log4j12'
}


configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

tasks.named("bootJar") {
    mainClass = 'org.devalurum.messengersystem.MessengerSystemApplication'
    archiveName = "$baseName.$extension"
}

tasks.withType(JavaCompile) {
    options.compilerArgs = [
            '-Amapstruct.defaultComponentModel=spring'
    ]
}

tasks.named('test') {
    useJUnitPlatform()
}
